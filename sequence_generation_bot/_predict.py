
from sequence_generator_nn import SequenceGeneratorNN 
from params.lermontov_azimov_vedmak_2 import ps
from service_bot import ServiceBot

def predict():
    print('üëâ checkPredictions')
    ps['model_steps_num'] = None
    ps['batch_size'] = 1
    sbot = ServiceBot(ps) if ps['use_service_bot'] else None
    nn = SequenceGeneratorNN(ps, sbot)
    nn.loadVocab()
    nn.createModel()
    nn_weights_path = ps['path_models'] + ps['default_model_name'] + ps['default_model_ext']
    nn.loadWeights(nn_weights_path)
    res = nn.predict('–ó–¥–µ—Å—å', 20)
    res = nn.predict('–ó–¥–µ—Å—å, –≤ –º—É—Ç–Ω–æ–º —Å–≤–µ—Ç–µ –æ—Å—Ç—Ä–æ–∫–æ–Ω–µ—á–Ω—ã—Ö', 10)
    res = nn.predict('–≥—Ä–∏–±—ã —Å —Ç–æ–Ω–∫–∏–º–∏ –Ω–æ–∂–∫–∞–º–∏:', 20)
    res = nn.predict('–∫–∞–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ –≤–æ', 30)
    res = nn.predict('–ù–∞—á–∏–Ω–∞—è —Ä–∞—Å—Å–∫–∞–∑, —Ä–∞—Å—Å–∫–∞–∑—á–∏–∫', 40)
    res = nn.predict('–ë—É—É—É', 10)
    res = nn.predict('–≠—Ç–æ –ë—É—É—É', 10)
    res = nn.predict('–ë—É—É—É —ç—Ç–æ', 10)
    res = nn.predict('–≠—Ç–æ', 10)
    res = nn.predict('—á—Ç–æ–±—ã –Ω–∏–∫–æ–≥–æ –≤–∞–∂–Ω–æ–≥–æ', 15)
    res = nn.predict('–ó–∞ —Å—Ç–æ–ª–æ–º –¥–µ–ª–∞–ª–æ—Å—å –≤—Å–µ –≤–µ—Å–µ–ª–µ–µ.  –ö–æ–º–ø–∞–Ω–∏—è  –õ—é—Ç–∏–∫–∞', 20)
    res = nn.predict('–ú—ã—à–æ–≤—É—Ä –≤ –æ–±—â–µ—Å—Ç–≤–µ', 25)
    res = nn.predict('–ù–æ–≥–∏  –†–∞–≥–Ω–∞—Ä–∞,', 30)
    res = nn.predict('- –ü–æ–≤–µ—Å–µ–ª–∏–ª–∏—Å—å-—Ç–æ —Ö–æ—Ä–æ—à–æ', 40)
    res = nn.predict('–ü–æ—Ç–æ–º –Ω–∞—á–∞–ª–æ—Å—å  –ø–æ–≤–∞–ª—å–Ω–æ–µ', 45)
    res = nn.predict('- –Ø —Ä–∞–¥–∞', 50)
    res = nn.predict('–í –∑–∞–ø–∞–¥–Ω–æ–º –∫—Ä—ã–ª–µ', 55)
    res = nn.predict('–ô–µ–Ω–Ω–∏—Ñ—ç—Ä  –æ—Ç–Ω—è–ª–∞  —Ä—É–∫—É', 60)
    print('üëà checkPredictions')

predict()